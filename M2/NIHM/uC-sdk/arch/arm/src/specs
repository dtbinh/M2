*asm:
%{mbig-endian:-EB} %{mlittle-endian:-EL} %(asm_cpu_spec) %{mapcs-*:-mapcs-%*} %(subtarget_asm_float_spec) %{mthumb-interwork:-mthumb-interwork} %{mfloat-abi=*} %{mfpu=*} %(subtarget_extra_asm_spec)

*asm_debug:
%{!g0:%{gstabs*:--gstabs}%{!gstabs*:%{g*:--gdwarf2}}} %{fdebug-prefix-map=*:--debug-prefix-map %*}

*asm_final:


*asm_options:
%{-target-help:%:print-asm-header()} %{v} %{w:-W} %{I*} %a %Y %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}

*invoke_as:
%{!fwpa:   %{fcompare-debug=*|fdump-final-insns=*:%:compare-debug-dump-opt()}   %{!S:-o %|.s |
 as %(asm_options) %m.s %A }  }

*cpp:
%(subtarget_cpp_spec)					%{mfloat-abi=soft:%{mfloat-abi=hard:						%e-mfloat-abi=soft and -mfloat-abi=hard may not be used together}} %{mbig-endian:%{mlittle-endian:							%e-mbig-endian and -mlittle-endian may not be used together}}

*cpp_options:
%(cpp_unique_options) %1 %{m*} %{std*&ansi&trigraphs} %{W*&pedantic*} %{w} %{f*} %{g*:%{!g0:%{g*} %{!fno-working-directory:-fworking-directory}}} %{O*} %{undef} %{save-temps*:-fpch-preprocess}

*cpp_debug_options:
%{d*}

*cpp_unique_options:
%{!Q:-quiet} %{nostdinc*} %{C} %{CC} %{v} %{I*&F*} %{P} %I %{MD:-MD %{!o:%b.d}%{o*:%.d%*}} %{MMD:-MMD %{!o:%b.d}%{o*:%.d%*}} %{M} %{MM} %{MF*} %{MG} %{MP} %{MQ*} %{MT*} %{!E:%{!M:%{!MM:%{!MT:%{!MQ:%{MD|MMD:%{o*:-MQ %*}}}}}}} %{remap} %{g3|ggdb3|gstabs3|gcoff3|gxcoff3|gvms3:-dD} %{!iplugindir*:%{fplugin*:%:find-plugindir()}} %{H} %C %{D*&U*&A*} %{i*} %Z %i %{fmudflap:-D_MUDFLAP -include mf-runtime.h} %{fmudflapth:-D_MUDFLAP -D_MUDFLAPTH -include mf-runtime.h} %{E|M|MM:%W{o*}}

*trad_capable_cpp:
cc1 -E %{traditional|traditional-cpp:-traditional-cpp}

*cc1:


*cc1_options:
%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}} %{!iplugindir*:%{fplugin*:%:find-plugindir()}} %1 %{!Q:-quiet} %{!dumpbase:-dumpbase %B} %{d*} %{m*} %{aux-info*} %{fcompare-debug-second:%:compare-debug-auxbase-opt(%b)}  %{!fcompare-debug-second:%{c|S:%{o*:-auxbase-strip %*}%{!o*:-auxbase %b}}}%{!c:%{!S:-auxbase %b}}  %{g*} %{O*} %{W*&pedantic*} %{w} %{std*&ansi&trigraphs} %{v:-version} %{pg:-p} %{p} %{f*} %{undef} %{Qn:-fno-ident} %{Qy:} %{-help:--help} %{-target-help:--target-help} %{-version:--version} %{-help=*:--help=%*} %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %b.s}}} %{fsyntax-only:-o %j} %{-param*} %{fmudflap|fmudflapth:-fno-builtin -fno-merge-constants} %{coverage:-fprofile-arcs -ftest-coverage}

*cc1plus:


*link_gcc_c_sequence:
--start-group %G %L --end-group

*link_ssp:
%{fstack-protector|fstack-protector-all:-lssp_nonshared -lssp}

*endfile:
 crtn%O%s

*link:
%{mbig-endian:-EB} %{mlittle-endian:-EL} %{static:-Bstatic} %{shared:-shared} %{symbolic:-Bsymbolic} -X %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*|march=armv4|mcpu=fa526|mcpu=fa626:--fix-v4bx} %{mbig-endian:%{march=armv7-a|mcpu=cortex-a5	   |mcpu=cortex-a7					   |mcpu=cortex-a8|mcpu=cortex-a9|mcpu=cortex-a15	   |mcpu=generic-armv7-a				   |march=armv7-m|mcpu=cortex-m3			   |march=armv7e-m|mcpu=cortex-m4			   |march=armv6-m|mcpu=cortex-m0			   :%{!r:--be8}}}

*lib:


*mfwrap:
 %{static: %{fmudflap|fmudflapth:  --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc --wrap=mmap --wrap=mmap64 --wrap=munmap --wrap=alloca} %{fmudflapth: --wrap=pthread_create}} %{fmudflap|fmudflapth: --wrap=main}

*mflib:
%{fmudflap|fmudflapth: -export-dynamic}

*link_gomp:


*libgcc:
-lgcc

*startfile:
 crti%O%s

*cross_compile:
1

*version:
4.7.4

*multilib:
. !mthumb !marm !march=armv6s-m !march=armv7-m !march=armv7e-m !march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;thumb mthumb !marm !march=armv6s-m !march=armv7-m !march=armv7e-m !march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;arm !mthumb marm !march=armv6s-m !march=armv7-m !march=armv7e-m !march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;fpu !mthumb !marm !march=armv6s-m !march=armv7-m !march=armv7e-m !march=armv7 !mfloat-abi=softfp mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv6-m mthumb !marm march=armv6s-m !march=armv7-m !march=armv7e-m !march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7-m mthumb !marm !march=armv6s-m march=armv7-m !march=armv7e-m !march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7e-m mthumb !marm !march=armv6s-m !march=armv7-m march=armv7e-m !march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7-ar/thumb mthumb !marm !march=armv6s-m !march=armv7-m !march=armv7e-m march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7e-m/softfp mthumb !marm !march=armv6s-m !march=armv7-m march=armv7e-m !march=armv7 mfloat-abi=softfp !mfloat-abi=hard mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7e-m/fpu mthumb !marm !march=armv6s-m !march=armv7-m march=armv7e-m !march=armv7 !mfloat-abi=softfp mfloat-abi=hard mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7-ar/thumb/softfp mthumb !marm !march=armv6s-m !march=armv7-m !march=armv7e-m march=armv7 mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 mfpu=vfpv3-d16;armv7-ar/thumb/fpu mthumb !marm !march=armv6s-m !march=armv7-m !march=armv7e-m march=armv7 !mfloat-abi=softfp mfloat-abi=hard !mfpu=fpv4-sp-d16 mfpu=vfpv3-d16;

*multilib_defaults:
marm mlittle-endian mfloat-abi=soft mno-thumb-interwork fno-leading-underscore

*multilib_extra:


*multilib_matches:
mcpu=cortex-m0 march=armv6s-m;mcpu=cortex-m0plus march=armv6s-m;mcpu=cortex-m1 march=armv6s-m;march=armv6-m march=armv6s-m;mcpu=cortex-m3 march=armv7-m;mcpu=cortex-m4 march=armv7e-m;march=armv7-r march=armv7;march=armv7-a march=armv7;mcpu=cortex-r4 march=armv7;mcpu=cortex-r4f march=armv7;mcpu=cortex-r5 march=armv7;mcpu=cortex-r7 march=armv7;mcpu=cortex-a5 march=armv7;mcpu=cortex-a7 march=armv7;mcpu=cortex-a8 march=armv7;mcpu=cortex-a9 march=armv7;mcpu=cortex-a15 march=armv7;mfpu=vfpv3 mfpu=vfpv3-d16;mfpu=vfpv3-fp16 mfpu=vfpv3-d16;mfpu=vfpv3-d16-fp16 mfpu=vfpv3-d16;mfpu=vfpv3xd mfpu=vfpv3-d16;mfpu=vfpv3xd-fp16 mfpu=vfpv3-d16;mfpu=vfpv4 mfpu=vfpv3-d16;mfpu=vfpv4-d16 mfpu=vfpv3-d16;mfpu=neon mfpu=vfpv3-d16;mfpu=neon-fp16 mfpu=vfpv3-d16;mfpu=neon-vfpv4 mfpu=vfpv3-d16;mthumb mthumb;marm marm;march=armv6s-m march=armv6s-m;march=armv7-m march=armv7-m;march=armv7e-m march=armv7e-m;march=armv7 march=armv7;mfloat-abi=softfp mfloat-abi=softfp;mfloat-abi=hard mfloat-abi=hard;mfpu=fpv4-sp-d16 mfpu=fpv4-sp-d16;mfpu=vfpv3-d16 mfpu=vfpv3-d16;

*multilib_exclusions:


*multilib_options:
mthumb/marm march=armv6s-m/march=armv7-m/march=armv7e-m/march=armv7 mfloat-abi=softfp/mfloat-abi=hard mfpu=fpv4-sp-d16/mfpu=vfpv3-d16

*multilib_reuse:
armv7-ar/thumb !mthumb marm !march=armv6s-m !march=armv7-m !march=armv7e-m march=armv7 !mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 !mfpu=vfpv3-d16;armv7-ar/thumb/softfp !mthumb marm !march=armv6s-m !march=armv7-m !march=armv7e-m march=armv7 mfloat-abi=softfp !mfloat-abi=hard !mfpu=fpv4-sp-d16 mfpu=vfpv3-d16;armv7-ar/thumb/fpu !mthumb marm !march=armv6s-m !march=armv7-m !march=armv7e-m march=armv7 !mfloat-abi=softfp mfloat-abi=hard !mfpu=fpv4-sp-d16 mfpu=vfpv3-d16;

*linker:
collect2

*linker_plugin_file:


*lto_wrapper:


*lto_gcc:


*link_libgcc:
%D

*md_exec_prefix:


*md_startfile_prefix:


*md_startfile_prefix_1:


*startfile_prefix_spec:


*sysroot_spec:
--sysroot=%R

*sysroot_suffix_spec:


*sysroot_hdrs_suffix_spec:


*self_spec:


*subtarget_cpp_spec:
-D__USES_INITFINI__

*asm_cpu_spec:
 %{mcpu=generic-*:-march=%*;   :%{mcpu=*:-mcpu=%*} %{march=*:-march=%*}}

*subtarget_extra_asm_spec:
%{mabi=apcs-gnu|mabi=atpcs:-meabi=gnu;:-meabi=5} %{mcpu=arm8|mcpu=arm810|mcpu=strongarm*|march=armv4|mcpu=fa526|mcpu=fa626:--fix-v4bx}

*subtarget_asm_float_spec:
%{mapcs-float:-mfloat}

*link_command:
%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:    %(linker) %{!fno-use-linker-plugin:%{flto|flto=*|fuse-linker-plugin:     -plugin %(linker_plugin_file)     -plugin-opt=%(lto_wrapper)     -plugin-opt=-fresolution=%u.res     %{!nostdlib:%{!nodefaultlibs:%:pass-through-libs(%(link_gcc_c_sequence))}}     }}%{flto|flto=*:%<fcompare-debug*}     %{flto} %{flto=*} %l %{pie:-pie} %X %{o*} %{e*} %{N} %{n} %{r}    %{s} %{t} %{u*} %{z} %{Z} %{!nostdlib:%{!nostartfiles:%S}}    %{static:} %{L*} %(mfwrap) %(link_libgcc) %o    %{fopenmp|ftree-parallelize-loops=*:%:include(libgomp.spec)%(link_gomp)}    %{fgnu-tm:%:include(libitm.spec)%(link_itm)}    %(mflib)  %{fsplit-stack: --wrap=pthread_create}    %{fprofile-arcs|fprofile-generate*|coverage:-lgcov}    %{!nostdlib:%{!nodefaultlibs:%(link_ssp) %(link_gcc_c_sequence)}}    %{!nostdlib:%{!nostartfiles:%E}} %{T*} }}}}}}

